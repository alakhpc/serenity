window.SIDEBAR_ITEMS = {"enum":[["ActionRowComponent",""],["ButtonKind",""],["ButtonStyle","The style of a button."],["CommandDataOptionValue","The value of an [`CommandDataOption`]."],["CommandOptionType","The type of an [`CommandOption`]."],["CommandPermissionType","The type of an [`CommandPermissionData`]."],["CommandType","The type of an application command."],["ComponentInteractionDataKind",""],["ComponentType","The type of a component"],["InputTextStyle","The style of the input text"],["Interaction","Discord docs"],["InteractionType","The type of an Interaction."],["MembershipState","Discord docs."],["ResolvedTarget","The resolved value of a [`CommandData::target_id`]."],["ResolvedValue","The resolved value of a [`CommandDataOption`]."],["Scope","The available OAuth2 Scopes."],["Unresolved","Option value variants that couldn’t be resolved by `CommandData::options()`."]],"struct":[["ActionRow","An action row."],["ApplicationFlags","The flags of the application."],["AutocompleteOption","The focused option for autocomplete interactions return by [`CommandData::autocomplete`]."],["Button","A button component."],["Command","The base command model that belongs to an application."],["CommandData","The command data payload."],["CommandDataOption","A set of a parameter and a value from the user."],["CommandDataResolved","The resolved data of a command data interaction payload. It contains the objects of [`CommandDataOption`]s."],["CommandInteraction","An interaction when a user invokes a slash command."],["CommandOption","The parameters for an [`Command`]."],["CommandOptionChoice","The only valid values a user can pick in an [`CommandOption`]."],["CommandPermission","An [`Command`] permission."],["CommandPermissionData","The [`CommandPermission`] data."],["ComponentInteraction","An interaction triggered by a message component."],["ComponentInteractionData","A message component interaction data, provided by [`ComponentInteraction::data`]"],["CurrentApplicationInfo","Information about the current application and its owner."],["InputText","An input text component for modal interactions"],["InstallParams","Settings for the application’s default in-app authorization link"],["InteractionResponseFlags","The flags for an interaction response message."],["MessageInteraction","Sent when a `Message` is a response to an [`Interaction`]."],["ModalInteraction","An interaction triggered by a modal submit."],["ModalInteractionData","A modal submit interaction data, provided by [`ModalInteraction::data`]"],["PartialCurrentApplicationInfo","Partial information about the given application."],["PingInteraction","A ping interaction, which can only be received through an endpoint url."],["ResolvedOption",""],["SelectMenu","A select menu component."],["SelectMenuOption","A select menu component options."],["Team","Information about the Team group of the application."],["TeamMember","Information about a Member on a Team."]]};